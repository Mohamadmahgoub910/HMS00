// <auto-generated />
using System;
using HMS00.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMS00.Migrations
{
    [DbContext(typeof(HMSDBContext))]
    [Migration("20251001103627_CreateTestDb")]
    partial class CreateTestDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HMS00.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("AppointmentTime")
                        .HasColumnType("time");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId");

                    b.HasIndex("UserId");

                    b.HasIndex("DoctorId", "AppointmentDate", "AppointmentTime")
                        .IsUnique();

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("HMS00.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            ImageUrl = "/images/doctors/doc1.jpg",
                            Name = "Dr. Ahmed Ali",
                            Specialization = "Cardiology"
                        },
                        new
                        {
                            DoctorId = 2,
                            ImageUrl = "/images/doctors/doc2.jpg",
                            Name = "Dr. Sara Mahmoud",
                            Specialization = "Dermatology"
                        },
                        new
                        {
                            DoctorId = 3,
                            ImageUrl = "/images/doctors/doc3.jpg",
                            Name = "Dr. Omar Hossam",
                            Specialization = "Radiology"
                        },
                        new
                        {
                            DoctorId = 4,
                            ImageUrl = "/images/doctors/doc4.jpg",
                            Name = "Dr. Mona Adel",
                            Specialization = "Pediatrics"
                        },
                        new
                        {
                            DoctorId = 5,
                            ImageUrl = "/images/doctors/doc5.jpg",
                            Name = "Dr. Hany Nabil",
                            Specialization = "Orthopedics"
                        },
                        new
                        {
                            DoctorId = 6,
                            ImageUrl = "/images/doctors/doc6.jpg",
                            Name = "Dr. Salma Reda",
                            Specialization = "Neurology"
                        },
                        new
                        {
                            DoctorId = 7,
                            ImageUrl = "/images/doctors/doc1.jpg",
                            Name = "Dr. Yasser Tarek",
                            Specialization = "ENT"
                        },
                        new
                        {
                            DoctorId = 8,
                            ImageUrl = "/images/doctors/doc2.jpg",
                            Name = "Dr. Laila Mostafa",
                            Specialization = "Gynecology"
                        },
                        new
                        {
                            DoctorId = 9,
                            ImageUrl = "/images/doctors/doc3.jpg",
                            Name = "Dr. Mohamed Salah",
                            Specialization = "General Surgery"
                        },
                        new
                        {
                            DoctorId = 10,
                            ImageUrl = "/images/doctors/doc4.jpg",
                            Name = "Dr. Eman Hossam",
                            Specialization = "Ophthalmology"
                        });
                });

            modelBuilder.Entity("HMS00.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "ahmed.hassan@example.com",
                            FullName = "Ahmed Hassan",
                            Phone = "0101111111"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "sara.mohamed@example.com",
                            FullName = "Sara Mohamed",
                            Phone = "0102222222"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "omar.fathy@example.com",
                            FullName = "Omar Fathy",
                            Phone = "0103333333"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "nour.samir@example.com",
                            FullName = "Nour Samir",
                            Phone = "0104444444"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "youssef.adel@example.com",
                            FullName = "Youssef Adel",
                            Phone = "0105555555"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "mona.ali@example.com",
                            FullName = "Mona Ali",
                            Phone = "0106666666"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "karim.tarek@example.com",
                            FullName = "Karim Tarek",
                            Phone = "0107777777"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "heba.salah@example.com",
                            FullName = "Heba Salah",
                            Phone = "0108888888"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "mahmoud.reda@example.com",
                            FullName = "Mahmoud Reda",
                            Phone = "0109999999"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "rana.mostafa@example.com",
                            FullName = "Rana Mostafa",
                            Phone = "0110000000"
                        },
                        new
                        {
                            UserId = 11,
                            Email = "tamer.hany@example.com",
                            FullName = "Tamer Hany",
                            Phone = "0111111111"
                        },
                        new
                        {
                            UserId = 12,
                            Email = "laila.nabil@example.com",
                            FullName = "Laila Nabil",
                            Phone = "0112222222"
                        },
                        new
                        {
                            UserId = 13,
                            Email = "fady.magdy@example.com",
                            FullName = "Fady Magdy",
                            Phone = "0113333333"
                        },
                        new
                        {
                            UserId = 14,
                            Email = "nesma.adel@example.com",
                            FullName = "Nesma Adel",
                            Phone = "0114444444"
                        },
                        new
                        {
                            UserId = 15,
                            Email = "hossam.ezz@example.com",
                            FullName = "Hossam Ezz",
                            Phone = "0115555555"
                        });
                });

            modelBuilder.Entity("HMS00.Models.Appointment", b =>
                {
                    b.HasOne("HMS00.Models.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS00.Models.User", "User")
                        .WithMany("Appointments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HMS00.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HMS00.Models.User", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
